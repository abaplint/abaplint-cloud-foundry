name: Build

on: [push, pull_request]

jobs:
  test-js:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
    - name: npm install, npm test
      run: |
        npm install
        npm test
      env:
        CI: true

  test-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: build and start container
      run: |
        docker build -f Dockerfile -t abaplint-backend .
        docker run -d --rm -p 3000:3000 abaplint-backend
        sleep 5s
    - name: runcheck healthz
      run: |
        RESPONSE=`curl -sS localhost:3000/healthz` || true
        if [ "$RESPONSE" = "OK" ]; then
          echo "healthz is OK"
        else
          echo "$RESPONSE"
          exit 1
        fi
    - name: stop containers
      if: always()
      run: docker stop $(docker ps -a -q)
    - name: Determine version
      id: determine_version
      run: |
        npm install
        GIT_VERSION=`git rev-list HEAD --count`
        echo Git Version: $GIT_VERSION
        ABAPLINT_VERSION=`node -p "require('@abaplint/core/package.json').version"`
        echo abaplint Version: $ABAPLINT_VERSION
        NEW_VERSION=`echo ${GIT_VERSION}-${ABAPLINT_VERSION}`
        echo New Version: $NEW_VERSION
        echo "::set-output name=NEW_VERSION::$NEW_VERSION"
    - name: Build and publish docker container
      if: success() && github.ref == 'refs/heads/master' && github.repository == 'abaplint/abaplint-sci-server'
      env:
        DOCKER_USERNAME: larshp
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_REPO: abaplint/abaplint-backend
      uses: docker/build-push-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
        repository: abaplint/abaplint-backend
        tags: latest, ${{ steps.determine_version.outputs.NEW_VERSION }}
